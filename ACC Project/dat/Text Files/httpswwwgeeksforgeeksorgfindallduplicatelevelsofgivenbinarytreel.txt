Find all duplicate levels of given Binary Tree - GeeksforGeeks Skip to content Tutorials Practice DS & Algo. Must Do Questions DSA Topic-wise DSA Company-wise Algorithms Analysis of Algorithms Asymptotic Analysis Worst, Average and Best Cases Asymptotic Notations Little o and little omega notations Lower and Upper Bound Theory Analysis of Loops Solving Recurrences Amortized Analysis What does 'Space Complexity' mean ? Pseudo-polynomial Algorithms Polynomial Time Approximation Scheme A Time Complexity Question Searching Algorithms Sorting Algorithms Graph Algorithms Pattern Searching Geometric Algorithms Mathematical Bitwise Algorithms Randomized Algorithms Greedy Algorithms Dynamic Programming Divide and Conquer Backtracking Branch and Bound All Algorithms Data Structures Arrays Linked List Stack Queue Binary Tree Binary Search Tree Heap Hashing Graph Advanced Data Structure Matrix Strings All Data Structures Interview Corner Company Preparation Top Topics Practice Company Questions Interview Experiences Experienced Interviews Internship Interviews Competititve Programming Design Patterns System Design Tutorial Multiple Choice Quizzes Languages C C++ Java Python C# JavaScript jQuery SQL PHP Scala Perl Go Language HTML CSS Kotlin CS Subjects Mathematics Operating System DBMS Computer Networks Computer Organization and Architecture Theory of Computation Compiler Design Digital Logic Software Engineering GATE GATE Computer Science Notes Last Minute Notes GATE CS Solved Papers GATE CS Original Papers and Official Keys GATE 2021 Dates GATE CS 2021 Syllabus Important Topics for GATE CS Web Technologies HTML CSS JavaScript AngularJS ReactJS NodeJS Bootstrap jQuery PHP Software Designs Software Design Patterns System Design Tutorial School Learning School Programming Mathematics Number System Algebra Trigonometry Statistics Probability Geometry Mensuration Calculus Maths Notes (Class 8-12) Class 8 Notes Class 9 Notes Class 10 Notes Class 11 Notes Class 12 Notes NCERT Solutions Class 8 Maths Solution Class 9 Maths Solution Class 10 Maths Solution Class 11 Maths Solution Class 12 Maths Solution RD Sharma Solutions Class 8 Maths Solution Class 9 Maths Solution Class 10 Maths Solution Class 11 Maths Solution Class 12 Maths Solution Physics Notes (Class 8-11) Class 8 Notes Class 9 Notes Class 10 Notes Class 11 Notes CS Exams/PSUs ISRO ISRO CS Original Papers and Official Keys ISRO CS Solved Papers ISRO CS Syllabus for Scientist/Engineer Exam UGC NET UGC NET CS Notes Paper II UGC NET CS Notes Paper III UGC NET CS Solved Papers Student Campus Ambassador Program School Ambassador Program Project Geek of the Month Campus Geek of the Month Placement Course Competititve Programming Testimonials Geek on the Top Careers Internship Jobs Apply for Jobs Post a Job JOB-A-THON Events Courses Write Come write articles for us and get featured Practice Learn and code with the best industry experts Premium Get access to ad-free content, doubt assistance and more! Jobs Come and find your dream job with us Geeks Digest Quizzes Geeks Campus Gblog Articles IDE Campus Mantri Home Saved Videos Courses GBlog Puzzles What's New ? Change Language Data Structures Algorithms Interview Preparation Topic-wise Practice C++ Java Python Competitive Programming Machine Learning Web Development SDE Sheet Puzzles GFG School Projects Related Articles ? Related Articles Java Developer Learning Path ? A Complete Roadmap Best Way To Start Learning Core Java ? A Complete Roadmap 10 Tips For Landing Your Dream Internship Dagger Hilt in Android with Example Implement Nested Routes in React.js - React Router DOM V6 How to Create a Shell Script in linux How to create and download CSV file in JavaScript ? Spring Boot Kafka Producer Example Python Plotly: How to set up a color palette? Suffix Sum Array Spring - REST JSON Response Spring MVC CRUD with Example Anagram Substring Search (Or Search for all permutations) | Set 2 Spring Boot Kafka Consumer Example How to Create a Residual Plot in Python How to add Snap to alignment feature in FlatList in React Native ? Count of Subarrays whose first element is the minimum How to redirect in React with Typescript ? How to Find Confidence Intervals in R? How to Setup Rust in VSCode? Spring Boot - Dependency Management Partition the given array in two parts to make the MEX of both parts same How to Set Upstream Branch on Git? Compiler Design - Variants of Syntax Tree How to Perform Quantile Regression in Python How to Fix: non-numeric argument to binary operator in R Git - Cherry Pick How To Calculate Mahalanobis Distance in Python Python OpenCV - cv2.calcHist method Three way partitioning of an Array without changing the relative ordering Table of Contents Java Developer Learning Path ? A Complete Roadmap Best Way To Start Learning Core Java ? A Complete Roadmap 10 Tips For Landing Your Dream Internship Dagger Hilt in Android with Example Implement Nested Routes in React.js - React Router DOM V6 How to Create a Shell Script in linux How to create and download CSV file in JavaScript ? Spring Boot Kafka Producer Example Python Plotly: How to set up a color palette? Suffix Sum Array Spring - REST JSON Response Spring MVC CRUD with Example Anagram Substring Search (Or Search for all permutations) | Set 2 Spring Boot Kafka Consumer Example How to Create a Residual Plot in Python How to add Snap to alignment feature in FlatList in React Native ? Count of Subarrays whose first element is the minimum How to redirect in React with Typescript ? How to Find Confidence Intervals in R? How to Setup Rust in VSCode? Spring Boot - Dependency Management Partition the given array in two parts to make the MEX of both parts same How to Set Upstream Branch on Git? Compiler Design - Variants of Syntax Tree How to Perform Quantile Regression in Python How to Fix: non-numeric argument to binary operator in R Git - Cherry Pick How To Calculate Mahalanobis Distance in Python Python OpenCV - cv2.calcHist method Three way partitioning of an Array without changing the relative ordering Improve Article Save Article Like Article Find all duplicate levels of given Binary Tree Last Updated : 25 Mar, 2022 Given the root of a binary tree in which all nodes has values 0 or 1, the task is to find and print all levels for which another level exists such that the decimal representation of each is same. If no such level exists, return an empty list. Examples: Input: 1 / \ 0 1 / \ / 1 0 1 / \ 0 1 / 1 Output: {3, 1}, {4, 0} Explanation: Level 3 is duplicate of level 1 Level 4 is duplicate of level 0 Input: 1 Output: { } Approach: The idea is to solve the problem is based on the following observation: The idea is to perform levelorder traversal of given Tree and for each level, convert the binary representation to decimal and store in an int variable. Then the problem will be converted to simply find all duplicate elements in given array. Follow the below steps to solve this problem: Do level order traversal from root to leaf For each level, convert it to decimal equivalent and store the value in a map in {decimal_number, level_number} format. Then, simply check if there are more than one levels for a decimal key. If yes, then print the levels as duplicates. If no such level exists, return an empty list. Below is the implementation of the above approach: C# // C# program to implement above approach using System; using System.Collections.Generic; using System.Linq; // Class containing left and right // child of current node and key value public class Node { public int data; public Node left, right; public Node(int item) { data = item; left = right = null; } } public class LevelInfo { public int level; public int length; } public class GFG { // Root of the Binary Tree public Node root; Dictionary<int, List<LevelInfo> > duplicateMap = new Dictionary<int, List<LevelInfo> >(); public virtual List<List<int> > printDuplicateLevels(Node root) { int h = height(root); int i; List<List<int> > dup_levels = new List<List<int> >(); // Initialize for the root level var zerolevelInfo = new LevelInfo() { level = 0, length = 0 }; duplicateMap[root.data] = new List<LevelInfo>() { zerolevelInfo }; for (i = 1; i <= h; i++) { List<int> currentLevel = new List<int>(); var currentLevelOrder = getCurrentLevel(root, i, currentLevel) .ToList(); int decimalValue = Convert.ToInt32( string.Join("", currentLevelOrder), 2); var currentlevelInfo = new LevelInfo() { level = i - 1, length = currentLevelOrder.Count() }; if (duplicateMap.ContainsKey(decimalValue)) { var dictData = duplicateMap[decimalValue].Where( l => l.length == currentLevelOrder.Count()); if (dictData.Any()) { List<int> dup_level_curr = new List<int>(); dup_level_curr.Add(i - 1); dup_level_curr.Add( dictData.Select(l => l.level) .First()); dup_levels.Add(dup_level_curr); } else { duplicateMap[decimalValue].Add( currentlevelInfo); } } else duplicateMap[decimalValue] = new List<LevelInfo>() { currentlevelInfo }; } return dup_levels; } // Compute the "height" of a tree public virtual int height(Node root) { if (root == null) { return 0; } else { // Compute height of each subtree int lheight = height(root.left); int rheight = height(root.right); // Use the larger one if (lheight > rheight) { return (lheight + 1); } else { return (rheight + 1); } } } // Get nodes at the current level public virtual IList<int> getCurrentLevel(Node root, int level, List<int> currentLevelOrder) { if (root == null) { return currentLevelOrder; } if (level == 1) { currentLevelOrder.Add(root.data); } else if (level > 1) { getCurrentLevel(root.left, level - 1, currentLevelOrder); getCurrentLevel(root.right, level - 1, currentLevelOrder); } return currentLevelOrder; } // Driver Code public static void Main(string[] args) { GFG tree = new GFG(); tree.root = new Node(1); tree.root.left = new Node(0); tree.root.right = new Node(1); tree.root.left.left = new Node(1); tree.root.left.right = new Node(0); tree.root.right.left = new Node(1); tree.root.left.right.left = new Node(0); tree.root.right.left.right = new Node(1); tree.root.left.right.left.left = new Node(1); // Execute and print the duplicate levels List<List<int> > dup_levels = tree.printDuplicateLevels(tree.root); Console.Write("[ "); foreach(var curr_level in dup_levels) { Console.Write("[ "); foreach(var dupli_level in curr_level) { Console.Write(dupli_level + " "); } Console.Write("] "); } Console.WriteLine("]"); } } Output [ [ 3 1 ] [ 4 0 ] ] Time Complexity: O(N) Auxiliary Space: O(N) My Personal Notes arrow_drop_up Save Like Previous Geeks Summer Carnival 2022 - Your Best Investment of the Year Next Minimize operations to reduce Array sum by half by reducing any elements by half Recommended Articles Page : Print Binary Tree levels in sorted order | Set 3 (Tree given as array) 08, Mar 19 Maximum sum of leaf nodes among all levels of the given binary tree 25, Apr 19 Maximum sum of non-leaf nodes among all levels of the given binary tree 29, Apr 19 Print all nodes between two given levels in Binary Tree 06, Nov 18 Print all Palindromic Levels Of a Binary Tree 03, Apr 20 Print all Prime Levels of a Binary Tree 07, Apr 20 Print all Co-Prime Levels of a Binary Tree 08, Apr 20 Print all Exponential Levels of a Binary Tree 22, Apr 20 Left rotate digits of node values of all levels of a Binary Tree in increasing order 23, Mar 21 Modify Binary Tree by replacing all nodes at even and odd levels by their nearest even or odd perfect squares respectively 22, Feb 21 Print alternate nodes from all levels of a Binary Tree 21, Sep 20 Sum of all vertical levels of a Binary Tree 08, Feb 21 Count nodes from all lower levels smaller than minimum valued node of current level for every level in a Binary Tree 14, Sep 20 Print all K-sum levels in a Binary Tree 22, Apr 20 Left-Right traversal of all the levels of Binary tree 28, Nov 19 Print Levels of all nodes in a Binary Tree 15, Aug 17 Print odd positioned nodes of odd levels in level order of the given binary tree 05, Sep 19 Print even positioned nodes of even levels in level order of the given binary tree 29, Apr 19 Print even positioned nodes of odd levels in level order of the given binary tree 06, Sep 19 Print odd positioned nodes of even levels in level order of the given binary tree 06, Sep 19 Averages of Levels in Binary Tree 14, Jul 17 Print Binary Tree levels in sorted order | Set 2 (Using set) 31, Jan 18 Print updated levels of each node of a Complete Binary Tree based on difference in weights of subtrees 14, May 20 Count levels in a Binary Tree consisting of node values having set bits at different positions 29, Jan 21 Article Contributed By : crypticj @crypticj Vote for difficulty Easy Normal Medium Hard Expert Article Tags : Binary Tree Geeks-Premier-League-2022 tree-level-order Geeks Premier League Tree Practice Tags : Tree Report Issue Writing code in comment? Please use ide.geeksforgeeks.org, generate link and share the link here. Load Comments What's New Data Structures & Algorithms- Self Paced Course View Details Complete Interview Preparation View Details System Design-Live Classes for Working Professionals View Details Most popular in Geeks Premier League Foundation CSS Progress Bar Native Meter OSI Security Architecture How to build your own CLI (Command Line Interface) with Node.js ? Bash Scripting - If Statement How to connect ReactJS with flask API ? Most visited in Tree Tree Traversals (Inorder, Preorder and Postorder) Binary Tree | Set 1 (Introduction) Level Order Binary Tree Traversal AVL Tree | Set 1 (Insertion) Inorder Tree Traversal without Recursion ? 5th Floor, A-118, Sector-136, Noida, Uttar Pradesh - 201305 feedback@geeksforgeeks.org Company About Us Careers In Media Contact Us Privacy Policy Copyright Policy Learn Algorithms Data Structures SDE Cheat Sheet Machine learning CS Subjects Video Tutorials News Top News Technology Work & Career Business Finance Lifestyle Languages Python Java CPP Golang C# SQL Web Development Web Tutorials Django Tutorial HTML CSS JavaScript Bootstrap Contribute Write an Article Improve an Article Pick Topics to Write Write Interview Experience Internships Video Internship @geeksforgeeks , Some rights reserved We use cookies to ensure you have the best browsing experience on our website. By using our site, you acknowledge that you have read and understood our Cookie Policy & Privacy Policy Got It ! Start Your Coding Journey Now! Login Register