SDE SHEET - A Complete Guide for SDE Preparation - GeeksforGeeks Skip to content Tutorials Practice DS & Algo. Must Do Questions DSA Topic-wise DSA Company-wise Algorithms Analysis of Algorithms Asymptotic Analysis Worst, Average and Best Cases Asymptotic Notations Little o and little omega notations Lower and Upper Bound Theory Analysis of Loops Solving Recurrences Amortized Analysis What does 'Space Complexity' mean ? Pseudo-polynomial Algorithms Polynomial Time Approximation Scheme A Time Complexity Question Searching Algorithms Sorting Algorithms Graph Algorithms Pattern Searching Geometric Algorithms Mathematical Bitwise Algorithms Randomized Algorithms Greedy Algorithms Dynamic Programming Divide and Conquer Backtracking Branch and Bound All Algorithms Data Structures Arrays Linked List Stack Queue Binary Tree Binary Search Tree Heap Hashing Graph Advanced Data Structure Matrix Strings All Data Structures Interview Corner Company Preparation Top Topics Practice Company Questions Interview Experiences Experienced Interviews Internship Interviews Competititve Programming Design Patterns System Design Tutorial Multiple Choice Quizzes Languages C C++ Java Python C# JavaScript jQuery SQL PHP Scala Perl Go Language HTML CSS Kotlin CS Subjects Mathematics Operating System DBMS Computer Networks Computer Organization and Architecture Theory of Computation Compiler Design Digital Logic Software Engineering GATE GATE Computer Science Notes Last Minute Notes GATE CS Solved Papers GATE CS Original Papers and Official Keys GATE 2021 Dates GATE CS 2021 Syllabus Important Topics for GATE CS Web Technologies HTML CSS JavaScript AngularJS ReactJS NodeJS Bootstrap jQuery PHP Software Designs Software Design Patterns System Design Tutorial School Learning School Programming Mathematics Number System Algebra Trigonometry Statistics Probability Geometry Mensuration Calculus Maths Notes (Class 8-12) Class 8 Notes Class 9 Notes Class 10 Notes Class 11 Notes Class 12 Notes NCERT Solutions Class 8 Maths Solution Class 9 Maths Solution Class 10 Maths Solution Class 11 Maths Solution Class 12 Maths Solution RD Sharma Solutions Class 8 Maths Solution Class 9 Maths Solution Class 10 Maths Solution Class 11 Maths Solution Class 12 Maths Solution Physics Notes (Class 8-11) Class 8 Notes Class 9 Notes Class 10 Notes Class 11 Notes CS Exams/PSUs ISRO ISRO CS Original Papers and Official Keys ISRO CS Solved Papers ISRO CS Syllabus for Scientist/Engineer Exam UGC NET UGC NET CS Notes Paper II UGC NET CS Notes Paper III UGC NET CS Solved Papers Student Campus Ambassador Program School Ambassador Program Project Geek of the Month Campus Geek of the Month Placement Course Competititve Programming Testimonials Geek on the Top Careers Internship Jobs Apply for Jobs Post a Job JOB-A-THON Events Courses Write Come write articles for us and get featured Practice Learn and code with the best industry experts Premium Get access to ad-free content, doubt assistance and more! Jobs Come and find your dream job with us Geeks Digest Quizzes Geeks Campus Gblog Articles IDE Campus Mantri Home Saved Videos Courses GBlog Puzzles What's New ? Change Language Array Sheet String Sheet DP Sheet Tree Sheet Graph Sheet CS Subjects Sheet SDE Sheet Mass Recruiters Sheet Product-Based Coding Sheet Company-Wise Practice Sheet FAANG Coding Sheet Love Babbar Sheet Related Articles ? Related Articles SDE SHEET ? A Complete Guide for SDE Preparation Must Do Questions for Companies like TCS, CTS, HCL, IBM ? TCS Interview Experience | Set 1 (On-Campus 2014) TCS Interview Experience | Set 2 (On-campus Recruitment Drive) TCS Interview Experience | Set 3 (On-campus Recruitment Drive) TCS DESS Interview Experience | Set 4 (On-campus) TCS Interview Experience | Set 5 (On-campus) TCS Interview Experience | Set 6 (On-campus) TCS Interview Experience | Set 7 (Off-Campus) TCS Interview Experience | Set 8 (On-Campus) TCS Placement Preparation TCS Placement Paper | MCQ 1 TCS Placement Paper | MCQ 2 TCS Placement Paper | MCQ 3 TCS Placement Paper | MCQ 4 TCS Placement Paper | MCQ 5 TCS Placement Paper | MCQ 6 TCS Placement Paper | MCQ 7 TCS Placement Paper | MCQ 8 TCS Placement Paper | MCQ 9 TCS Placement Paper | MCQ 10 Top 50 Array Coding Problems for Interviews Recursion Difference between BFS and DFS Counting Sort A* Search Algorithm How to write a Pseudo Code? Playfair Cipher with Examples Recursive Practice Problems with Solutions Quick Sort vs Merge Sort Table of Contents SDE SHEET ? A Complete Guide for SDE Preparation Must Do Questions for Companies like TCS, CTS, HCL, IBM ? TCS Interview Experience | Set 1 (On-Campus 2014) TCS Interview Experience | Set 2 (On-campus Recruitment Drive) TCS Interview Experience | Set 3 (On-campus Recruitment Drive) TCS DESS Interview Experience | Set 4 (On-campus) TCS Interview Experience | Set 5 (On-campus) TCS Interview Experience | Set 6 (On-campus) TCS Interview Experience | Set 7 (Off-Campus) TCS Interview Experience | Set 8 (On-Campus) TCS Placement Preparation TCS Placement Paper | MCQ 1 TCS Placement Paper | MCQ 2 TCS Placement Paper | MCQ 3 TCS Placement Paper | MCQ 4 TCS Placement Paper | MCQ 5 TCS Placement Paper | MCQ 6 TCS Placement Paper | MCQ 7 TCS Placement Paper | MCQ 8 TCS Placement Paper | MCQ 9 TCS Placement Paper | MCQ 10 Top 50 Array Coding Problems for Interviews Recursion Difference between BFS and DFS Counting Sort A* Search Algorithm How to write a Pseudo Code? Playfair Cipher with Examples Recursive Practice Problems with Solutions Quick Sort vs Merge Sort Improve Article Save Article Like Article SDE SHEET ? A Complete Guide for SDE Preparation Difficulty Level : Medium What is SDE Sheet? SDE Sheet is a list of the most important topics or the most popular questions that are asked in the Software Development Engineer Interviews. How is this sheet different or better from others? It doesn?t contain only coding questions. It covers all the segments round-wise like MCQs, DSA (Coding Questions), CS Subjects, Puzzles, System Design, Projects. It is helpful for both ? Freshers and Experienced. Table of Contents/Roadmap Build a Resume MCQs Aptitude and Reasoning Computer Science Subjects C C++ Java Data Structures Algorithms OS DBMS CN Data Structures and Algorithms Arrays Searching and Sorting Hashing Matrix Strings Recursion and Backtracking Bit Manipulation Linked List Stacks and Queues Binary Tree Binary Search Tree Greedy Dynamic Programming Heap Graph Trie CS Subjects Operating Sytem DBMS SQL Computer Networks Puzzles Projects System Design Build a Perfect Resume The sole purpose of a resume is to make you land your dream job. It introduces your qualifications, skills, achievements, and everything regarding your expertise. It helps you land into your career. When you have a perfect resume, nothing can be a hindrance to the best job. Create and Know how to build a perfect Resume ? Free Resume Builder By GeeksforGeeks ? Create Resume Online Multiple Choice Questions (MCQs) C Programming C++ Java Data Structures Algorithms Operating System DBMS Computer Networks Aptitude Data Structures and Algorithms Introduction to Data Structures Introduction to Algorithm Keep a track of all the DSA problems mentioned below ? Practice SDE Sheet Arrays An array is a collection of items stored at contiguous memory locations. The idea is to store multiple items of the same type together. Question Article Practice Video Leaders in an array Link Link Link Equilibrium point Link Link Link Sort an array of 0s, 1s and 2s Link Link Link Reverse array in groups Link Link Link Convert array into Zig-Zag fashion Link Link Link Rearrange array alternatively Link Link Link Missing number in array Link Link Link K-th element of two sorted Arrays Link Link Link Check if two arrays are equal or not Link Link Link Kadane?s Algorithm Link Link Link Subarray with given sum Link Link Link Trapping Rain Water Link Link Link Minimum Platforms Link Link Link Stock buy and sell Link Link Link Largest Number formed from an Array Link Link Link Largest subarray with 0 sum Link Link Link Swapping pairs make sum equal Link Link Link Searching and Sorting Question Article Practice Video Binary Search Link Link Link Quick Sort Link Link Link Merge Sort Link Link Link Merge two sorted arrays Link Link Link Inversion of Array Link Link Link Search in a Rotated Array Link Link Link Sorting Elements of an Array by Frequency Link Link Link Sum of Middle Elements of two sorted arrays Link Link Link K?th smallest element Link Link Link Allocate minimum number of pages Link Link Link Hashing Question Article Practice Video First element to occur k times Link Link Link Find the element that appears once in sorted array Link Link Link Number of pairs Link Link Link Find all pairs with a given sum Link Link Link Common elements Link Link Link Find all four sum numbers Link Link Link Count distinct elements in every window Link Link Link Array Pair Sum Divisibility Problem Link Link Link Longest consecutive subsequence Link Link Link Array Subset of another array Link Link Link Zero Sum Subarrays Link Link Link Relative Sorting Link Link Link Matrix A matrix represents a collection of numbers arranged in an order of rows and columns. It is necessary to enclose the elements of a matrix in parentheses or brackets. Question Article Practice Video Rotate a matrix Link Link Link Spirally traversing a matrix Link Link Link Search in a row wise and column wise sorted matrix Link Link Link Print all palindromic paths from top left to bottom right in a matrix Link Link Link Find the row with maximum number of 1s Link Link Link Find median in row wise sorted matrix Link Link Link Check if all rows of a matrix are circular rotations of each other Link Link Link String Strings are defined as an array of characters. The difference between a character array and a string is the string is terminated with a special character ?\0?. Question Article Practice Video Find first repeated character Link Link Link Reverse words in a given string Link Link Link Check if string is rotated by two places Link Link Link Roman Number to Integer Link Link Link Anagram Link Link Link Remove Duplicates Link Link Link Longest Distinct Characters in the string Link Link Link Implement Atoi Link Link Link Implement strstr Link Link Link Rabin Karp Algorithm Link Link Link KMP Algorithm Link Link Link Convert a Sentence into its equivalent mobile numeric keypad sequence. Link Link Link Longest Common Prefix Link Link Link Smallest window in a string containing all the characters of another string Link Link Link Uncommon characters Link Link Link Minimum indexed character Link Link Link Recursion and Backtracking Recursion: The process in which a function calls itself directly or indirectly is called recursion and the corresponding function is called as recursive function. Backtracking: Backtracking is an algorithmic-technique for solving problems recursively by trying to build a solution incrementally, one piece at a time, removing those solutions that fail to satisfy the constraints of the problem at any point of time (by time, here, is referred to the time elapsed till reaching any level of the search tree). Question Article Practice Video Recursively remove all adjacent duplicates Link Link Link Tower Of Hanoi Link Link Link Special Keyboard Link Link Link Permutations of a given string Link Link Link N-Queen Problem Link Link Link Solve the Sudoku Link Link Link Rat in a Maze Problem Link Link Link Word Boggle Link Link Link Generate IP Addresses Link Link Link Bit Manipulation Bit Manipulation is a technique used in a variety of problems to get the solution in an optimized way. Question Article Practice Video Find first set bit Link Link Link Rightmost different bit Link Link Link Check whether K-th bit is set or not Link Link Link Toggle bits given range Link Link Link Set kth bit Link Link Link Power of 2 Link Link Link Bit Difference Link Link Link Rotate Bits Link Link Link Swap all odd and even bits Link Link Link Count total set bits Link Link Link Longest Consecutive 1?s Link Link Link Sparse Number Link Link Link Alone in a couple Link Link Link Maximum subset XOR Link Link Link Stack and Queue Stack: A stack is a linear data structure in which elements can be inserted and deleted only from one side of the list, called the top. A stack follows the LIFO (Last In First Out) principle. Queue: A queue is a linear data structure in which elements can be inserted only from one side of the list called rear, and the elements can be deleted only from the other side called the front. The queue data structure follows the FIFO (First In First Out) principle. Question Article Practice Video Parenthesis Checker Link Link Link Merge Overlapping Intervals Link Link Link Stock span problem Link Link Link Next larger element Link Link Link Largest Rectangular Area in a Histogram Link Link Link Queue using two Stacks Link Link Link Stack using two queues Link Link Link Get minimum element from stack Link Link Link LRU Cache Link Link Link Circular tour Link Link Link First non-repeating character in a stream Link Link Link Rotten Oranges Link Link Link Maximum of all subarrays of size k Link Link Link Linked List A linked list is a linear data structure, in which the elements are not stored at contiguous memory locations. Question Article Practice Video Finding middle element in a linked list Link Link Link Reverse a linked list Link Link Link Rotate a Linked List Link Link Link Reverse a Linked List in groups of given size Link Link Link Intersection point in Y shaped linked lists Link Link Link Detect Loop in linked list Link Link Link Remove loop in Linked List Link Link Link n?th node from end of linked list Link Link Link Flattening a Linked List Link Link Link Merge two sorted linked lists Link Link Link Pairwise swap of a linked list Link Link Link Add two numbers represented by linked lists Link Link Link Check if Linked List is Palindrome Link Link Link Implement Queue using Linked List Link Link Link Implement Stack using Linked List Link Link Link Given a linked list of 0s, 1s and 2s, sort it Link Link Link Delete without head pointer Link Link Link Binary Tree A tree whose elements have at most 2 children is called a binary tree. Since each element in a binary tree can have only 2 children, we typically name them the left and right child. Question Article Practice Video Height of Binary Tree Link Link Link Number of leaf nodes Link Link Link Check if given Binary Tree is Height Balanced or Not Link Link Link Write Code to Determine if Two Trees are Identical or Not Link Link Link Given a binary tree, check whether it is a mirror of itself Link Link Link Maximum Path Sum Link Link Link Print Left View of Binary Tree Link Link Link Print Bottom View of Binary Tree Link Link Link Print a Binary Tree in Vertical Order Link Link Link Diameter of a Binary Tree Link Link Link Level order traversal in spiral form Link Link Link Connect Nodes at Same Level Link Link Link Convert a given Binary Tree to Doubly Linked List Link Link Link Serialize and Deserialize a Binary Tree Link Link Link Binary Search Tree Binary Search Tree is a node-based binary tree data structure which has the following properties: The left subtree of a node contains only nodes with keys lesser than the node?s key. The right subtree of a node contains only nodes with keys greater than the node?s key. The left and right subtree each must also be a binary search tree. Question Article Practice Video Check for BST Link Link Link Lowest Common Ancestor in a BST Link Link Link Ceil in BST Link Link Link K-th Largest Element in BST Link Link Link Largest BST in Binary Tree Link Link Link Merge Two Balanced Binary Search Trees Link Link Link Sorted Array to Balanced BST Link Link Link Greedy Approach Greedy is an algorithmic paradigm that builds up a solution piece by piece, always choosing the next piece that offers the most obvious and immediate benefit. Question Article Practice Video Activity Selection Link Link Link N meetings in one room Link Link Link Coin Piles Link Link Link Maximize Toys Link Link Link Page Faults in LRU Link Link Link Largest number possible Link Link Link Minimize the heights Link Link Link Minimize the sum of product Link Link Link Huffman Decoding Link Link Link Minimum Spanning Tree Link Link Link Dynamic Programming Dynamic Programming is mainly an optimization over plain recursion. Wherever we see a recursive solution that has repeated calls for same inputs, we can optimize it using Dynamic Programming. Question Article Practice Video Minimum number of Coins Link Link Link Longest Common Substring Link Link Link Longest Increasing Subsequence Link Link Link Longest Common Subsequence Link Link Link 0 ? 1 Knapsack Problem Link Link Link Maximum sum increasing subsequence Link Link Link Minimum number of jumps Link Link Link Edit Distance Link Link Link Coin Change Problem Link Link Link Subset Sum Problem Link Link Link Longest Palindrome in a String Link Link Link Form a Palindrome Link Link Link Box Stacking Link Link Link Rod Cutting Link Link Link Min Cost Path Link Link Link Minimum sum partition Link Link Link Count number of ways to cover a distance Link Link Link Egg Dropping Puzzle Link Link Link Heap A Heap is a special Tree-based data structure in which the tree is a complete binary tree. Question Article Practice Video Heap Sort Link Link Link Find median in a stream Link Link Link Operations on Binary Min Heap Link Link Link Rearrange characters Link Link Link Merge K sorted linked lists Link Link Link Kth smallest element in a row-column wise sorted matrix Link Link Link Graph A Graph is a non-linear data structure consisting of nodes and edges. The nodes are sometimes also referred to as vertices and the edges are lines or arcs that connect any two nodes in the graph. Question Article Practice Video Depth First Traversal Link Link Link Breadth First Traversal Link Link Link Detect cycle in undirected graph Link Link Link Detect cycle in a directed graph Link Link Link Topological sort Link Link Link Find the number of islands Link Link Link Implementing Dijkstra Link Link Link Minimum Swaps Link Link Link Strongly Connected Components Link Link Link Shortest Source to Destination Path Link Link Link Find whether path exist Link Link Link Minimum Cost Path Link Link Link Circle of Strings Link Link Link Floyd Warshall Link Link Link Alien Dictionary Link Link Link Snake and Ladder Problem Link Link Link Trie Trie is an efficient information retrieval data structure. Using Trie, search complexities can be brought to optimal limit (key length). Question Article Practice Video Trie | (Insert and Search) Link Link Link Trie | (Delete) Link Link Link Print unique rows in a given Binary matrix Link Link Link Counting the number of words in a Trie Link Link Link Longest Common Prefix using Trie Link Link Link Auto-complete feature using Trie Link Link Link Boggle | Set 2 (Using Trie) Link Link Link Minimum XOR Value Pair Link Link Link Palindrome pair in an array of words (or strings) Link Link Link Operating System An operating system acts as an intermediary between the user of a computer and computer hardware. The purpose of an operating system is to provide an environment in which a user can execute programs conveniently and efficiently. Below links contains complete Operating System Study Material: Commonly Asked Operating Systems Interview Questions Last Minute Notes (LMNs) | Operating Systems Complete Tutorial on Operating System DBMS Database is a collection of inter-related data which helps in efficient retrieval, insertion and deletion of data from database and organizes the data in the form of tables, views, schemas, reports etc. Below links contains complete DBMS study Material: Commonly Asked DBMS Interview Questions Commonly Asked DBMS Interview Questions | Set-2 Last Minute Notes (LMNs) | DBMS Complete Tutorial on DBMS SQL SQL stands for Structured Query Language. It is a language used to interact with the database, i.e to create a database, to create a table in the database, to retrieve data or update a table in the database. Below links contains complete SQL study Material: SQL Interview Questions SQL Interview Questions | Set-2 SQL Interview Questions | Set-3 Complete Tutorial on SQL Computer Networks A computer network is a system that connects numerous independent computers in order to share information (data) and resources. The integration of computers and other different devices allows users to communicate more easily. Below links contains complete Computer Networks study Material: Commonly Asked Computer Networks Interview Questions Last Minute Notes (LMNs) | Computer Networks Complete Tutorial on Computer Networks Puzzles Puzzles are one of the ways to check your problem-solving skills. These are tricky questions that let you think logically. Try to solve these 20 most popular puzzles asked in Interviews Projects Thoroughly revise all the work you have done till now in your projects. The grilling about projects can sometimes be very deep. Also, choose your words before you speak. Mention only those topics where you think you are fine to be grilled upon. If you haven?t made a project then take an idea from GFG Projects and start working on it. System Design System Design is the process of designing the architecture, components, and interfaces for a system so that it meets the end-user requirements. System Design for tech interviews is something that can?t be ignored! Almost every IT giant whether it be Facebook, Amazon, Google, or any other ask various questions based on System Design concepts such as scalability, load-balancing, caching, etc. in the interview. This specifically designed System Design tutorial will help you to learn and master System Design concepts in the most efficient way from basics to advanced level. Note: We will start uploading videos soon. My Personal Notes arrow_drop_up Save Like Next Must Do Questions for Companies like TCS, CTS, HCL, IBM ? Recommended Articles Page : How I cracked EPAM Systems Drive 2020- Complete Guide On Preparation and FAQs 22, Aug 19 Google Interview Preparation For Software Engineer - A Complete Guide 21, Oct 19 Placement Preparation Guide 02, Jul 18 A Step by Step Guide for Placement Preparation | Set 1 03, Aug 16 A Step by Step Guide for Placement Preparation | Set 2 06, Aug 16 Complete Interview Preparation package you must have this Placement Season 27, Jun 19 Complete Interview Preparation For Product and Service Based Companies 28, Jul 19 How to Start a Career in Software Testing - A Complete Guide! 10, Jul 20 100 Days of Code - A Complete Guide For Beginners and Experienced 01, May 21 DSA Sheet by Love Babbar 14, Feb 22 A Must Do Interview Preparation Course by GeeksforGeeks 15, Dec 18 TCS Placement Preparation 07, May 19 Cognizant ( CTS ) Placement Preparation 07, May 19 TCS Digital Experience 2019 | Last Minute Preparation 18, Aug 19 Live Classes for Data Structures and Algorithms: Interview Preparation Focused Course 22, Sep 19 Preparation for Skype Interviews 11, Feb 21 Interview Preparation 21, Sep 21 Must Have Books For Placements Preparation 05, Jul 18 Off-Campus Placement Preparation 06, Nov 18 Design City Guide System like Foursquare 01, Feb 18 A subtle guide to get that college internship 25, Oct 18 Guide for Non-CS students to get placed in Software companies 21, Jan 18 Minimum time required to complete all tasks with alteration of their order allowed 10, May 21 Print path from root to all nodes in a Complete Binary Tree 03, Apr 19 Article Contributed By : GeeksforGeeks Vote for difficulty Current difficulty : Medium Easy Normal Medium Hard Expert Article Tags : GFG Sheets Interview Tips interview-preparation interview-questions Algorithms Computer Subject Data Structures Design Pattern Placements Project Puzzles Quizzes Practice Tags : Data Structures Puzzles Algorithms Report Issue Writing code in comment? Please use ide.geeksforgeeks.org, generate link and share the link here. Load Comments What's New Must Do Coding Questions - Self Paced View Details Low Level Design for Interview Preparation View Details DSA Live Classes for Working Professionals View Details Most popular in Algorithms DSA Sheet by Love Babbar Introduction to Algorithms Generate all permutation of a set in Python Complexity Analysis of Binary Search Converting Roman Numerals to Decimal lying between 1 to 3999 Most visited in Computer Subject Introduction to Algorithms Software Engineering | Coupling and Cohesion Software Engineering | Prototyping Model Software Engineering | Classification of Software Requirements Functional Programming Paradigm ? 5th Floor, A-118, Sector-136, Noida, Uttar Pradesh - 201305 feedback@geeksforgeeks.org Company About Us Careers In Media Contact Us Privacy Policy Copyright Policy Learn Algorithms Data Structures SDE Cheat Sheet Machine learning CS Subjects Video Tutorials News Top News Technology Work & Career Business Finance Lifestyle Languages Python Java CPP Golang C# SQL Web Development Web Tutorials Django Tutorial HTML CSS JavaScript Bootstrap Contribute Write an Article Improve an Article Pick Topics to Write Write Interview Experience Internships Video Internship @geeksforgeeks , Some rights reserved We use cookies to ensure you have the best browsing experience on our website. By using our site, you acknowledge that you have read and understood our Cookie Policy & Privacy Policy Got It ! Start Your Coding Journey Now! Login Register