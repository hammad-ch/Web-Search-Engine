GitHub - apple/swift: The Swift Programming Language Skip to content Sign up Product Features Mobile Actions Codespaces Packages Security Code review Issues Integrations GitHub Sponsors Customer stories Team Enterprise Explore Explore GitHub Learn and contribute Topics Collections Trending Learning Lab Open source guides Connect with others The ReadME Project Events Community forum GitHub Education GitHub Stars program Marketplace Pricing Plans Compare plans Contact Sales Education In this repository All GitHub ? Jump to ? No suggested jump to results In this repository All GitHub ? Jump to ? In this organization All GitHub ? Jump to ? In this repository All GitHub ? Jump to ? Sign in Sign up {{ message }} apple / swift Public Notifications Fork 9.5k Star 59.1k The Swift Programming Language swift.org Apache-2.0 License 59.1k stars 9.5k forks Star Notifications Code Pull requests 506 Security Insights More Code Pull requests Security Insights This commit does not belong to any branch on this repository, and may belong to a fork outside of the repository. main Switch branches/tags Branches Tags Could not load branches Nothing to show {{ refName }} default View all branches Could not load tags Nothing to show {{ refName }} default View all tags 397 branches 1,988 tags Code Latest commit slavapestov Merge pull request #42042 from slavapestov/rqm-reuse-machines ? 0045840 Mar 26, 2022 Merge pull request #42042 from slavapestov/rqm-reuse-machines RequirementMachine: Re-use requirement machines constructed by minimization for queries 0045840 Git stats 133,644 commits Files Permalink Failed to load latest commit information. Type Name Latest commit message Commit time .github Update PR template to use autolinking feature Oct 23, 2019 SwiftCompilerSources Remove CheckedCastValue from Swift compiler sources. Mar 23, 2022 apinotes [OSSignpost] Update apinotes to allow usage of os_signpost ABI entryp? Oct 6, 2020 benchmark [cxx-interop] Import size_t as Int instead of UInt on Linux Mar 24, 2022 bindings/xml [Markup] Print Tags in documentation comment XML Jun 22, 2017 cmake Prevent linker errors when building dispatch with instrumentation (#4? Mar 16, 2022 docs Adding Syntax Highlighting Mar 25, 2022 include RequirementMachine: Re-use requirement machines constructed by minimi? Mar 26, 2022 lib RequirementMachine: Freeze machines built from signatures immediately Mar 26, 2022 localization Prevent superfluous diagnostic-database execution Nov 12, 2020 stdlib Merge pull request #41452 from al45tair/eng/PR-89139049 Mar 25, 2022 test RequirementMachine: Re-use requirement machines constructed by minimi? Mar 26, 2022 tools Merge pull request #41929 from bnbarham/ast-manager-use-overlays Mar 25, 2022 unittests Merge pull request #41452 from al45tair/eng/PR-89139049 Mar 25, 2022 userdocs Docs: Reattach, rewrite and rename the ?associated-type-requirements?? Aug 30, 2021 utils [Build] Properly respect the darwin-crash-reporter-client setting. Mar 25, 2022 validation-test Merge pull request #41899 from xedin/rdar-90419017 Mar 25, 2022 .clang-format Update .clang-format for YAML 1.2. Jun 1, 2021 .dir-locals.el Fix tab size for Emacs users. Jul 16, 2021 .flake8 [Python: flake8] Update the .flake8 config file to remove non-existen? Feb 8, 2020 .gitattributes git: ensure that dosbatch files use CRLF for line endings Aug 22, 2021 .gitignore Add .build to gitignore Mar 5, 2022 .mailmap [mailmap] Make ahoppen@apple.com primary email for Alex Hoppen Mar 17, 2021 Brewfile [docs] Add First Pull Request guide and Getting Started guide. Sep 9, 2020 CHANGELOG.md Add noasync attribute to changelog Mar 22, 2022 CMakeLists.txt Merge pull request #41452 from al45tair/eng/PR-89139049 Mar 25, 2022 CODE_OF_CONDUCT.md Update the CODE_OF_CONDUCT.md Feb 28, 2022 CODE_OWNERS.TXT [NFC][interop] rename the PrintAsObjC library to PrintAsClang Jan 20, 2022 CONTRIBUTING.md Update doc and links to support new main branch Sep 23, 2020 LICENSE.txt [gardening] Fix accidental trailing whitespace. Oct 29, 2016 README.md Update the links for Package bot and drop Ubuntu 16.04 Feb 15, 2022 View code Swift Programming Language Welcome to Swift Contributing to Swift Getting Started Swift Toolchains Building Installing into Xcode Build Failures Learning More README.md Swift Programming Language Architecture main Package macOS x86_64 Ubuntu 18.04 x86_64 Ubuntu 20.04 x86_64 CentOS 8 x86_64 CentOS 7 x86_64 Amazon Linux 2 x86_64 Swift Community-Hosted CI Platforms OS Architecture Build Ubuntu 16.04 PPC64LE Ubuntu 18.04 AArch64 Ubuntu 20.04 AArch64 Ubuntu 20.04 wasm32 Android ARMv7 Android AArch64 Windows 2019 (VS 2017) x86_64 Windows 2019 (VS 2019) x86_64 Welcome to Swift Swift is a high-performance system programming language. It has a clean and modern syntax, offers seamless access to existing C and Objective-C code and frameworks, and is memory safe by default. Although inspired by Objective-C and many other languages, Swift is not itself a C-derived language. As a complete and independent language, Swift packages core features like flow control, data structures, and functions, with high-level constructs like objects, protocols, closures, and generics. Swift embraces modules, eliminating the need for headers and the code duplication they entail. To learn more about the programming language, visit swift.org. Contributing to Swift Getting Started Swift Toolchains Build Failures Learning More Contributing to Swift Contributions to Swift are welcomed and encouraged! Please see the Contributing to Swift guide. To be a truly great community, Swift.org needs to welcome developers from all walks of life, with different backgrounds, and with a wide range of experience. A diverse and friendly community will have more great ideas, more unique perspectives, and produce more great code. We will work diligently to make the Swift community welcoming to everyone. To give clarity of what is expected of our members, Swift has adopted the code of conduct defined by the Contributor Covenant. This document is used across many open source communities, and we think it articulates our values well. For more, see the Code of Conduct. Getting Started If you are interested in: Contributing fixes and features to the compiler: See our How to Submit Your First Pull Request guide. Building the compiler as a one-off: See our Getting Started guide. Building a toolchain as a one-off: Follow the Getting Started guide up until the "Building the project" section. After that, follow the instructions in the Swift Toolchains section below. We also have an FAQ that answers common questions. Swift Toolchains Building Swift toolchains are created using the script build-toolchain. This script is used by swift.org's CI to produce snapshots and can allow for one to locally reproduce such builds for development or distribution purposes. A typical invocation looks like the following:   $ ./swift/utils/build-toolchain $BUNDLE_PREFIX
 where $BUNDLE_PREFIX is a string that will be prepended to the build date to give the bundle identifier of the toolchain's Info.plist. For instance, if $BUNDLE_PREFIX was com.example, the toolchain produced will have the bundle identifier com.example.YYYYMMDD. It will be created in the directory you run the script with a filename of the form: swift-LOCAL-YYYY-MM-DD-a-osx.tar.gz. Beyond building the toolchain, build-toolchain also supports the following (non-exhaustive) set of useful options:: --dry-run: Perform a dry run build. This is off by default. --test: Test the toolchain after it has been compiled. This is off by default. --distcc: Use distcc to speed up the build by distributing the c++ part of the swift build. This is off by default. --sccache: Use sccache to speed up subsequent builds of the compiler by caching more c++ build artifacts. This is off by default. More options may be added over time. Please pass --help to build-toolchain to see the full set of options. Installing into Xcode On macOS if one wants to install such a toolchain into Xcode: Untar and copy the toolchain to one of /Library/Developer/Toolchains/ or ~/Library/Developer/Toolchains/. E.x.:   $ sudo tar -xzf swift-LOCAL-YYYY-MM-DD-a-osx.tar.gz -C /
  $ tar -xzf swift-LOCAL-YYYY-MM-DD-a-osx.tar.gz -C ~/
 The script also generates an archive containing debug symbols which can be installed over the main archive allowing symbolication of any compiler crashes.   $ sudo tar -xzf swift-LOCAL-YYYY-MM-DD-a-osx-symbols.tar.gz -C /
  $ tar -xzf swift-LOCAL-YYYY-MM-DD-a-osx-symbols.tar.gz -C ~/
 Specify the local toolchain for Xcode's use via Xcode->Toolchains. Build Failures Try the suggestions in Troubleshooting build issues. Make sure you are using the correct release of Xcode. If you have changed Xcode versions but still encounter errors that appear to be related to the Xcode version, try passing --clean to build-script. When a new version of Xcode is released, you can update your build without recompiling the entire project by passing --reconfigure to build-script. Learning More Be sure to look at the documentation index for a bird's eye view of the available documentation. In particular, the documents titled Debugging the Swift Compiler and Continuous Integration for Swift are very helpful to understand before submitting your first PR. About The Swift Programming Language swift.org Resources Readme License Apache-2.0 License Code of conduct Code of conduct Stars 59.1k stars Watchers 2.5k watching Forks 9.5k forks Releases 39 Swift 5.6 Release Latest Mar 14, 2022 + 38 releases Contributors 936 + 925 contributors Languages C++ 49.8% Swift 40.6% C 5.7% Python 2.1% CMake 0.7% Objective-C 0.5% Other 0.6% ? 2022 GitHub, Inc. Terms Privacy Security Status Docs Contact GitHub Pricing API Training Blog About You can?t perform that action at this time. You signed in with another tab or window. Reload to refresh your session. You signed out in another tab or window. Reload to refresh your session.