Count of connected components in given graph after removal of given Q vertices - GeeksforGeeks Skip to content Tutorials Practice DS & Algo. Must Do Questions DSA Topic-wise DSA Company-wise Algorithms Analysis of Algorithms Asymptotic Analysis Worst, Average and Best Cases Asymptotic Notations Little o and little omega notations Lower and Upper Bound Theory Analysis of Loops Solving Recurrences Amortized Analysis What does 'Space Complexity' mean ? Pseudo-polynomial Algorithms Polynomial Time Approximation Scheme A Time Complexity Question Searching Algorithms Sorting Algorithms Graph Algorithms Pattern Searching Geometric Algorithms Mathematical Bitwise Algorithms Randomized Algorithms Greedy Algorithms Dynamic Programming Divide and Conquer Backtracking Branch and Bound All Algorithms Data Structures Arrays Linked List Stack Queue Binary Tree Binary Search Tree Heap Hashing Graph Advanced Data Structure Matrix Strings All Data Structures Interview Corner Company Preparation Top Topics Practice Company Questions Interview Experiences Experienced Interviews Internship Interviews Competititve Programming Design Patterns System Design Tutorial Multiple Choice Quizzes Languages C C++ Java Python C# JavaScript jQuery SQL PHP Scala Perl Go Language HTML CSS Kotlin CS Subjects Mathematics Operating System DBMS Computer Networks Computer Organization and Architecture Theory of Computation Compiler Design Digital Logic Software Engineering GATE GATE Computer Science Notes Last Minute Notes GATE CS Solved Papers GATE CS Original Papers and Official Keys GATE 2021 Dates GATE CS 2021 Syllabus Important Topics for GATE CS Web Technologies HTML CSS JavaScript AngularJS ReactJS NodeJS Bootstrap jQuery PHP Software Designs Software Design Patterns System Design Tutorial School Learning School Programming Mathematics Number System Algebra Trigonometry Statistics Probability Geometry Mensuration Calculus Maths Notes (Class 8-12) Class 8 Notes Class 9 Notes Class 10 Notes Class 11 Notes Class 12 Notes NCERT Solutions Class 8 Maths Solution Class 9 Maths Solution Class 10 Maths Solution Class 11 Maths Solution Class 12 Maths Solution RD Sharma Solutions Class 8 Maths Solution Class 9 Maths Solution Class 10 Maths Solution Class 11 Maths Solution Class 12 Maths Solution Physics Notes (Class 8-11) Class 8 Notes Class 9 Notes Class 10 Notes Class 11 Notes CS Exams/PSUs ISRO ISRO CS Original Papers and Official Keys ISRO CS Solved Papers ISRO CS Syllabus for Scientist/Engineer Exam UGC NET UGC NET CS Notes Paper II UGC NET CS Notes Paper III UGC NET CS Solved Papers Student Campus Ambassador Program School Ambassador Program Project Geek of the Month Campus Geek of the Month Placement Course Competititve Programming Testimonials Geek on the Top Careers Internship Jobs Apply for Jobs Post a Job JOB-A-THON Events Courses Write Come write articles for us and get featured Practice Learn and code with the best industry experts Premium Get access to ad-free content, doubt assistance and more! Jobs Come and find your dream job with us Geeks Digest Quizzes Geeks Campus Gblog Articles IDE Campus Mantri Home Saved Videos Courses GBlog Puzzles What's New ? Change Language Data Structures Algorithms Interview Preparation Topic-wise Practice C++ Java Python Competitive Programming Machine Learning Web Development SDE Sheet Puzzles GFG School Projects Related Articles ? Related Articles Breadth First Search or BFS for a Graph Depth First Search or DFS for a Graph Dijkstra's shortest path algorithm | Greedy Algo-7 Graph and its representations Prim?s Minimum Spanning Tree (MST) | Greedy Algo-5 Kruskal?s Minimum Spanning Tree Algorithm | Greedy Algo-2 Topological Sorting Detect Cycle in a Directed Graph Bellman?Ford Algorithm | DP-23 Floyd Warshall Algorithm | DP-16 Disjoint Set (Or Union-Find) | Set 1 (Detect Cycle in an Undirected Graph) Detect cycle in an undirected graph Travelling Salesman Problem | Set 1 (Naive and Dynamic Programming) Find the number of islands | Set 1 (Using DFS) Strongly Connected Components Minimum number of swaps required to sort an array Dijkstra?s Algorithm for Adjacency List Representation | Greedy Algo-8 Ford-Fulkerson Algorithm for Maximum Flow Problem Check whether a given graph is Bipartite or not Shortest path in an unweighted graph Iterative Depth First Traversal of Graph Traveling Salesman Problem (TSP) Implementation Connected Components in an undirected graph Union-Find Algorithm | Set 2 (Union By Rank and Path Compression) Print all paths from a given source to a destination Applications of Depth First Search Dijkstra's Shortest Path Algorithm using priority_queue of STL m Coloring Problem | Backtracking-5 Hamiltonian Cycle | Backtracking-6 Kahn's algorithm for Topological Sorting Table of Contents Breadth First Search or BFS for a Graph Depth First Search or DFS for a Graph Dijkstra's shortest path algorithm | Greedy Algo-7 Graph and its representations Prim?s Minimum Spanning Tree (MST) | Greedy Algo-5 Kruskal?s Minimum Spanning Tree Algorithm | Greedy Algo-2 Topological Sorting Detect Cycle in a Directed Graph Bellman?Ford Algorithm | DP-23 Floyd Warshall Algorithm | DP-16 Disjoint Set (Or Union-Find) | Set 1 (Detect Cycle in an Undirected Graph) Detect cycle in an undirected graph Travelling Salesman Problem | Set 1 (Naive and Dynamic Programming) Find the number of islands | Set 1 (Using DFS) Strongly Connected Components Minimum number of swaps required to sort an array Dijkstra?s Algorithm for Adjacency List Representation | Greedy Algo-8 Ford-Fulkerson Algorithm for Maximum Flow Problem Check whether a given graph is Bipartite or not Shortest path in an unweighted graph Iterative Depth First Traversal of Graph Traveling Salesman Problem (TSP) Implementation Connected Components in an undirected graph Union-Find Algorithm | Set 2 (Union By Rank and Path Compression) Print all paths from a given source to a destination Applications of Depth First Search Dijkstra's Shortest Path Algorithm using priority_queue of STL m Coloring Problem | Backtracking-5 Hamiltonian Cycle | Backtracking-6 Kahn's algorithm for Topological Sorting Improve Article Save Article Like Article Count of connected components in given graph after removal of given Q vertices Last Updated : 25 Mar, 2022 Given an undirected graph g, the task is to find the number of coalitions formed in it after the removal of Q vertices and maximum vertices among all these connected components. A coalition is defined as the number of connected components left after removal of Q vertices i.e vertices being removed from the graph are not considered as part of the coalition. Example: Input: V = 7, E = 6, Q = 1 Edges: { {0, 3}, {1, 5}, {3, 6}, {3, 2}, {2, 4}, {5, 6} } queries: {3} Output: 3 3 Explanation: If we remove vertices 3 from the graph then their corresponding edges {{0, 3}, {3, 6}, {3, 2}} will also be get removed from the graph and the number of the connected components excluding Q (removed vertices) are {0}. {1, 5, 6} and {2, 4} with maximum coalition of {1, 5, 6} as 3. Input: V = 6, E = 6, Q = 2 Edges: {{0, 3}, {0, 2}, {3, 4}, {3, 5}, {3, 1}, {2, 4}} queries: {1, 2} Output: 1 4 Explanation: When vertex 1 and 2 is removed from the given graph the connected component excluding Q is {0, 3, 4, 5} with maximum coalition of {0, 3, 4, 5} as 4. Approach: The approach to solve this problem based on following idea The idea here is, if we remove all unnecessary edges that connects with the vertex mentioned in the query, then the problem will break down to find the number of connected component in undirected graph. Based on above idea follow the steps below to implement this approach: We can use the multimap to store edges between the vertices. We remove all edges that are connected with the vertices (because we assume that we will have to delete all the vertices from the Query then, their corresponding edges should also be get remove that are connected with the vertices) Find the number of connected component in undirected graph. Use a variable count to store the number of connected components, cnt to keep count of number of vertices of the component we are traversing and maxLen to store maximum vertices among all components ( maximum of cnt ). Calculate coalitions = count ( number of connected components ) ? size of query ( number of vertices removed) Below is the implementation of the above approach: C++14 #include <bits/stdc++.h> using namespace std; int maxLen = 0; int cnt; class Graph { int V; list<int>* adj; multimap<int, int> adj2; void DFSUtil(int v, bool visited[]); public: Graph(int V); void addEdges(); void removeEdges(int V, int Edges[][2], int E, int queries[], int Q); int NumberOfconnectedComponents(); }; // function to find the number of connected // component in undirected graph int Graph::NumberOfconnectedComponents() { bool* visited = new bool[V]; int count = 0; for (int v = 0; v < V; v++) visited[v] = false; for (int v = 0; v < V; v++) { if (visited[v] == false) { cnt = 0; DFSUtil(v, visited); count += 1; } } return count; } void Graph::DFSUtil(int v, bool visited[]) { visited[v] = true; cnt++; list<int>::iterator i; for (i = adj[v].begin(); i != adj[v].end(); ++i) if (!visited[*i]) { DFSUtil(*i, visited); } maxLen = max(maxLen, cnt); } Graph::Graph(int V) { this->V = V; adj = new list<int>[V]; } // add Edges in the graph void Graph::addEdges() { for (auto x : adj2) { adj[x.first].push_back(x.second); adj[x.second].push_back(x.first); } } // function to remove all the edges that are // connected with vertices void Graph::removeEdges(int V, int Edges[][2], int E, int queries[], int Q) { multimap<int, int> adj3; for (int i = 0; i < E; i++) adj3.insert({ Edges[i][0], Edges[i][1] }); for (int i = 0; i < Q; i++) { auto it1 = adj3.lower_bound(queries[i]); auto it2 = adj3.upper_bound(queries[i]); adj3.erase(it1, it2); } for (auto it = adj3.begin(); it != adj3.end(); it++) { adj2.insert({ it->second, it->first }); } for (int i = 0; i < Q; i++) { auto it1 = adj2.lower_bound(queries[i]); auto it2 = adj2.upper_bound(queries[i]); adj2.erase(it1, it2); } } // Driver code int main() { int V = 7, E = 6; Graph g(V); int Edges[][2] = { { 0, 3 }, { 1, 5 }, { 3, 6 }, { 3, 2 }, { 2, 4 }, { 5, 6 } }; int Q = 1; int queries[] = { 3 }; // remove all the edges that are connected with // vertices given in the queries g.removeEdges(V, Edges, E, queries, Q); g.addEdges(); cout << g.NumberOfconnectedComponents() - Q; cout << " " << maxLen; return 0; } Output 3 3 Time complexity: O(V + E*log(E)), where V is the number of vertices and E is the number of edges in the graph. Auxiliary Space: O(V), since an extra visited array of size V is required. My Personal Notes arrow_drop_up Save Like Previous Count of possible remainders for K in given ranges for Q queries Next Geeks Summer Carnival 2022 - Your Best Investment of the Year Recommended Articles Page : Queries to count connected components after removal of a vertex from a Tree 16, Sep 20 Find K vertices in the graph which are connected to at least one of remaining vertices 01, Jul 19 Smallest vertex in the connected components of all the vertices in given undirect graph 20, Sep 21 Connect a graph by M edges such that the graph does not contain any cycle and Bitwise AND of connected vertices is maximum 12, Mar 21 Convert undirected connected graph to strongly connected directed graph 21, May 20 Count of unique lengths of connected components for an undirected graph using STL 07, May 20 Program to count Number of connected components in an undirected graph 04, Apr 19 Construct a graph using N vertices whose shortest distance between K pair of vertices is 2 04, Jan 21 Pendant Vertices, Non-Pendant Vertices, Pendant Edges and Non-Pendant Edges in Graph 26, Oct 21 Queries to check if vertices X and Y are in the same Connected Component of an Undirected Graph 10, Aug 20 Check if every vertex triplet in graph contains two vertices connected to third vertex 15, Sep 20 Check if cells numbered 1 to K in a grid can be connected after removal of atmost one blocked cell 14, Apr 20 Sum of the minimum elements in all connected components of an undirected graph 22, Jun 18 Maximum decimal equivalent possible among all connected components of a Binary Valued Graph 31, May 20 Largest subarray sum of all connected components in undirected graph 20, May 20 Octal equivalents of connected components in Binary valued graph 28, May 20 Maximum number of edges to be removed to contain exactly K connected components in the Graph 16, Sep 20 Number of connected components of a graph ( using Disjoint Set Union ) 06, Jan 21 Find Weakly Connected Components in a Directed Graph 11, Oct 21 Maximum number of edges among all connected components of an undirected graph 12, Nov 18 Clone an undirected graph with multiple connected components 23, Jan 19 Maximum sum of values of nodes among all connected components of an undirected graph 10, May 20 Connected Components in an undirected graph 12, Jun 15 Maximize the number of uncolored vertices appearing along the path from root vertex and the colored vertices 18, Apr 20 Article Contributed By : GeeksforGeeks Vote for difficulty Easy Normal Medium Hard Expert Article Tags : connected-components Graph Practice Tags : Graph Report Issue Writing code in comment? Please use ide.geeksforgeeks.org, generate link and share the link here. Load Comments What's New Data Structures & Algorithms- Self Paced Course View Details Complete Interview Preparation View Details System Design-Live Classes for Working Professionals View Details Most popular in Graph Snake and Ladder Problem Best First Search (Informed Search) Uniform-Cost Search (Dijkstra for large Graphs) Water Jug problem using BFS Articulation Points (or Cut Vertices) in a Graph More related articles in Graph Iterative Deepening Search(IDS) or Iterative Deepening Depth First Search(IDDFS) Maximum Bipartite Matching Bridges in a graph Longest Path in a Directed Acyclic Graph Find if there is a path between two vertices in a directed graph ? 5th Floor, A-118, Sector-136, Noida, Uttar Pradesh - 201305 feedback@geeksforgeeks.org Company About Us Careers In Media Contact Us Privacy Policy Copyright Policy Learn Algorithms Data Structures SDE Cheat Sheet Machine learning CS Subjects Video Tutorials News Top News Technology Work & Career Business Finance Lifestyle Languages Python Java CPP Golang C# SQL Web Development Web Tutorials Django Tutorial HTML CSS JavaScript Bootstrap Contribute Write an Article Improve an Article Pick Topics to Write Write Interview Experience Internships Video Internship @geeksforgeeks , Some rights reserved We use cookies to ensure you have the best browsing experience on our website. By using our site, you acknowledge that you have read and understood our Cookie Policy & Privacy Policy Got It ! Start Your Coding Journey Now! Login Register